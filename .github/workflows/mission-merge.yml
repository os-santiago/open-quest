name: Mission Merge

on:
  workflow_call:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  metrics:
    name: Generar métricas y artefactos
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install 'pyyaml>=6.0' 'jsonschema>=4.19'

      - name: Generar métricas de misión
        run: |
          python scripts/generate_mission_metrics.py

      - name: Validar artefactos generados
        run: |
          python <<'PY'
import json
import pathlib
import sys

from jsonschema import Draft202012Validator

root = pathlib.Path('.').resolve()
leaderboard_path = root / 'docs' / 'data' / 'leaderboard.json'
schema_path = root / 'docs' / 'schemas' / 'leaderboard.schema.json'

if not leaderboard_path.exists():
    print('No se generó docs/data/leaderboard.json', file=sys.stderr)
    sys.exit(1)

schema = json.loads(schema_path.read_text(encoding='utf-8'))
validator = Draft202012Validator(schema)

data = json.loads(leaderboard_path.read_text(encoding='utf-8'))
errors = sorted(validator.iter_errors(data), key=lambda e: e.path)
if errors:
    for error in errors:
        location = ' / '.join(str(x) for x in error.path) or 'raíz'
        print(f"- {location}: {error.message}", file=sys.stderr)
    sys.exit(1)
PY

      - name: Publicar artefactos
        uses: actions/upload-artifact@v4
        with:
          name: mission-merge-artifacts
          path: |
            docs/data/leaderboard.json
            mission-merge-summary.md
          if-no-files-found: error
